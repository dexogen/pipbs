---
on: 
  push:
  schedule:
    - cron:  '0 0 * * 0'

permissions:
  contents: read
  pages: write
  id-token: write

env:
  REPO_NAME: pipbs
  CODENAME: bookworm
  COMPONENTS: main
  ARCHITECTURES: arm64

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.upload-artifact.outputs.artifact-id }}
      keyring: ${{ steps.create-apt-repo.outputs.keyring }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Create packages
        uses: robinraju/release-downloader@v1.10
        with:
          repository: 'wofferl/proxmox-backup-arm64'
          latest: true
          fileName: '*.deb'
      - uses: morph027/apt-repo-action@v2
        id: create-apt-repo
        with:
          repo-name: ${{ env.REPO_NAME }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          codename: ${{ env.CODENAME }}
          components: ${{ env.COMPONENTS }}
          architectures: ${{ env.ARCHITECTURES }}
          limit: '1'
          scan-dir: '.'
      # - name: Rename public key to gpg.key
      #   run: mv "${{ steps.create-apt-repo.outputs.dir }}/${{ steps.create-apt-repo.outputs.key }}" \
      #          "${{ steps.create-apt-repo.outputs.dir }}/gpg.key"
      - name: Move and rename README to index
        run: mv README.md ${{ steps.create-apt-repo.outputs.dir }}/index.md
      - name: Append directory tree to index.md
        run: |
          sudo apt-get update
          sudo apt-get install -y tree
          echo "\n## Repository structure\n" >> ${{ steps.create-apt-repo.outputs.dir }}/index.md
          echo '```' >> ${{ steps.create-apt-repo.outputs.dir }}/index.md
          tree -A ${{ steps.create-apt-repo.outputs.dir }} >> ${{ steps.create-apt-repo.outputs.dir }}/index.md
          echo '```' >> ${{ steps.create-apt-repo.outputs.dir }}/index.md
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ${{ steps.create-apt-repo.outputs.dir }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Adding summary
        run: |
          echo ':rocket:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'curl -sfLo /etc/apt.trusted.gpg.d/${{ needs.build.outputs.keyring }}.asc ${{ steps.deploy-pages.outputs.page_url }}gpg.key' >> $GITHUB_STEP_SUMMARY
          echo 'echo "deb ${{ steps.deploy-pages.outputs.page_url }} ${{ env.CODENAME }} ${{ env.COMPONENTS }}" >/etc/apt/sources.list.d/${{ env.REPO_NAME }}.list' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
...
